from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup

from database.context_manager import DatabaseContextManager
from keyboards.kb_inline import InlineKeyboards, SubscriptionCallbackFactory
from lexicon.lexicon_ru import guide_install
from logger.logging_config import logger

router = Router()


@router.callback_query(SubscriptionCallbackFactory.filter(F.action == 'get_guide_install_app'))
async def back_to_device_selection(
        callback_query: CallbackQuery, state: FSMContext,
        callback_data: SubscriptionCallbackFactory
        ):
    data = await state.get_data()
    previous_message_id = data.get("text_dragons_overview_id")
    show_slow_internet_id = data.get("show_slow_internet")
    if show_slow_internet_id:
        try:
            await callback_query.bot.delete_message(callback_query.message.chat.id, show_slow_internet_id)
            await state.update_data(show_slow_internet_id=None)
        except Exception as e:
            await logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID {show_slow_internet_id}", e)

    if previous_message_id:
        try:
            await callback_query.bot.delete_message(callback_query.message.chat.id, previous_message_id)
            await state.update_data(text_dragons_overview_id=None)
        except Exception as e:
            await logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID {previous_message_id}", e)

    name_app = callback_data.name_app
    subscription_id = callback_data.subscription_id
    await callback_query.message.edit_text(
            text="–í—ã–±–µ—Ä–∏ —Å–≤–æ—ë —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ",
            reply_markup=await InlineKeyboards.get_menu_install_app(name_app, subscription_id)
            )
    await callback_query.answer()


@router.callback_query(SubscriptionCallbackFactory.filter())
async def get_install_android(callback_query: CallbackQuery, callback_data: SubscriptionCallbackFactory, state: FSMContext):
    await callback_query.answer()
    name_device = callback_data.action
    name_app = callback_data.name_app
    subscription_id = callback_data.subscription_id
    async with DatabaseContextManager() as session_methods:
        try:
            subsciption = await session_methods.subscription.get_subscription_by_id(subscription_id)
            user_key = subsciption.key
            await callback_query.message.edit_text(
                    text=guide_install[name_app][name_device].format(key=user_key),
                    reply_markup=InlineKeyboardMarkup(
                            inline_keyboard=[
                                [
                                    InlineKeyboardButton(
                                            text="üîô –ù–∞–∑–∞–¥",
                                            callback_data=SubscriptionCallbackFactory(
                                                    action='get_guide_install_app',
                                                    subscription_id=subscription_id,
                                                    name_app=name_app
                                                    ).pack()
                                            )
                                    ]
                                ]
                            ),
                    parse_mode="Markdown"
                    )
            show_slow_internet = await callback_query.message.answer(
                text="–ï—Å–ª–∏ —É –≤–∞—Å –ø–ª–æ—Ö–æ –≥—Ä—É–∑–∏—Ç VPN, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Å–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–µ üëá.",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="üêâ –ú–æ–∏ –¥—Ä–∞–∫–æ–Ω—ã",
                                callback_data="view_subs"
                            )
                        ],
                ])
            )
            await state.update_data(show_slow_internet=show_slow_internet.message_id)
        except Exception as e:
            await logger.log_error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", e)
