import asyncio
from datetime import datetime, timedelta

from aiogram import Bot
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from database.context_manager import DatabaseContextManager
from logger.logging_config import logger


async def trial_checker(bot: Bot):
    async with DatabaseContextManager() as session_methods:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            users = await session_methods.users.get_all_users()
            if not users:
                return

            # –í—Ä–µ–º—è "–¥–µ–Ω—å –Ω–∞–∑–∞–¥" –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞
            one_day_ago = datetime.utcnow() - timedelta(days=1)

            for user in users:
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ:
                    # 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
                    # 2. –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                    # 3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ë–û–õ–¨–®–ï –¥–Ω—è –Ω–∞–∑–∞–¥ (created_at < one_day_ago)
                    # 4. –ï–º—É –µ—â–µ –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
                    if (
                            not user.trial_used
                            and user.created_at
                            and user.created_at < one_day_ago
                            and not user.reminder_trial_sub
                    ):
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                        try:
                            await session_methods.users.update_user(user.user_id, reminder_trial_sub=True)
                            await bot.send_message(
                                chat_id=user.user_id,
                                text=(
                                    f"–ü—Ä–∏–≤–µ—Ç, {user.username or '–¥—Ä—É–≥'}! üòä\n\n"
                                    f"–¢—ã –µ—â—ë –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥? –î–∞–≤–∞–π –∏—Å–ø—Ä–∞–≤–∏–º —ç—Ç–æ! üéâ\n"
                                    f"–í—Å–µ–≥–æ –ø–∞—Ä–∞ –∫–ª–∏–∫–æ–≤ ‚Äî –∏ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—Å—ë –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è!"
                                ),
                                reply_markup=InlineKeyboardMarkup(
                                    inline_keyboard=[
                                        [
                                            InlineKeyboardButton(
                                                text="‚öîÔ∏è –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                                                callback_data="activate_trial"
                                            )
                                        ]
                                    ]
                                )
                            )

                            await logger.log_info(
                                f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞\n"
                                f"ID: {user.user_id}\n"
                                f"Username: @{user.username}\n"
                                f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {user.created_at}\n"
                                f"–ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏: {datetime.utcnow() - user.created_at}"
                            )
                        except Exception as send_error:
                            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞)
                            await logger.log_info(
                                f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}: {send_error}")
                            # –í—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ –ø—ã—Ç–∞–ª–∏—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å
                            await session_methods.users.update_user(user.user_id, reminder_trial_sub=True)

                except Exception as e:
                    await logger.log_error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.user_id}:", e)

            await session_methods.session.commit()
        except Exception as e:
            await logger.log_error("–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ trial_checker", e)
            try:
                await session_methods.session.rollback()
            except:
                pass


async def run_trial_checker(bot: Bot):
    while True:
        try:
            await trial_checker(bot)
        except Exception as e:
            await logger.log_error("–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ run_trial_checker", e)

        # –°–ø–∏–º 24 —á–∞—Å–∞ (86400 —Å–µ–∫—É–Ω–¥)
        await asyncio.sleep(86400)