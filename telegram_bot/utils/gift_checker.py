import asyncio
from datetime import datetime

from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from database.context_manager import DatabaseContextManager
from handlers.services.extend_latest_subscription import extend_user_subscription
from logger.logging_config import logger


async def gift_checker(bot: Bot):
    async with DatabaseContextManager() as session_methods:
        try:
            gifts = await session_methods.gifts.get_pending_gifts()
            for gift in gifts:
                try:
                    recipient_user = await session_methods.users.get_user(gift.recipient_user_id)
                    sender_user = await session_methods.users.get_user(gift.giver_id)
                    if recipient_user:
                        service = await session_methods.services.get_service_by_id(gift.service_id)

                        await session_methods.gifts.update_gift(
                            gift_id=gift.gift_id,
                            status="awaiting_activation",
                            activated_at=None
                        )

                        keyboard = InlineKeyboardMarkup(inline_keyboard=[
                            [InlineKeyboardButton(
                                text="üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫",
                                callback_data=f"activate_gift_{gift.gift_id}"
                            )]
                        ])
                        await bot.send_message(
                            recipient_user.user_id,
                            f"üéÅ –í–∞–º –ø–æ–¥–∞—Ä–æ–∫! üéâ\n\n"
                            f"–í–∞—à –¥—Ä—É–≥ {'@' + sender_user.username if sender_user.username else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} —Ä–µ—à–∏–ª —Å–¥–µ–ª–∞—Ç—å –≤–∞–º –ø—Ä–∏—è—Ç–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑! ‚ú®\n\n"
                            f"üí™ –ó–∞—â–∏—Ç–∞ {service.name} –Ω–∞ {service.duration_days} –¥–Ω–µ–π üõ°Ô∏è\n\n"
                            f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üëá",
                            reply_markup=keyboard
                        )

                        await logger.log_info(
                            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{recipient_user.username} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç @{sender_user.username} –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏"
                        )
                except Exception as e:
                    await logger.log_error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–¥–∞—Ä–∫–∞', e)
            await session_methods.session.commit()
        except Exception as e:
            await logger.log_error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∞—Ä–∫–æ–≤', e)
            return


async def activate_gift_handler(bot: Bot, callback_query: CallbackQuery, gift_id: int):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–∞—Ä–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
    –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback'–æ–≤
    """
    async with DatabaseContextManager() as session_methods:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–∞—Ä–æ–∫
            gift = await session_methods.gifts.get_gift_by_id(gift_id)
            recipient_user = await session_methods.users.get_user(gift.recipient_user_id)

            if not gift:
                await callback_query.answer("‚ùå –ü–æ–¥–∞—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
                return

            if gift.status != "awaiting_activation":
                await callback_query.answer("‚ùå –≠—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", show_alert=True)
                return

            if callback_query.from_user.id != gift.recipient_user_id:
                await callback_query.answer("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫", show_alert=True)
                return

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ –∏ –¥–∞—Ä–∏—Ç–µ–ª–µ
            service = await session_methods.services.get_service_by_id(gift.service_id)
            giver = await session_methods.users.get_user(gift.giver_id)

            service_name = service.name
            service_duration = service.duration_days
            receiver_username = recipient_user.username
            recipient_user_id = recipient_user.user_id
            giver_username = giver.username if giver else 'Unknown'
            giver_user_id = giver.user_id if giver else None

            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–∞—Ä–æ–∫
            await session_methods.gifts.update_gift(
                gift_id=gift.gift_id,
                status="used",
                activated_at=datetime.utcnow()
            )

            # –ü—Ä–æ–¥–ª–µ–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
            await extend_user_subscription(
                gift.recipient_user_id,
                recipient_user.username,
                service.duration_days,
                session_methods
            )

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            await callback_query.message.edit_text(
                f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üéâ\n\n"
                f"üí™ –ó–∞—â–∏—Ç–∞ {service.name} –Ω–∞ {service.duration_days} –¥–Ω–µ–π –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! üõ°Ô∏è\n\n"
                f"üåê –î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞–π–¥–∏—Ç–µ –≤ /profile üîí"
            )

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –¥–∞—Ä–∏—Ç–µ–ª—è –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            if giver:
                await bot.send_message(
                    giver.user_id,
                    f"üéâ –û—Ç–ª–∏—á–Ω–æ! @{recipient_user.username} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –≤–∞—à –ø–æ–¥–∞—Ä–æ–∫! ‚ú®\n"
                    f"üí™ –ó–∞—â–∏—Ç–∞ {service.name} –Ω–∞ {service.duration_days} –¥–Ω–µ–π —Ç–µ–ø–µ—Ä—å –∞–∫—Ç–∏–≤–Ω–∞!"
                )

            await session_methods.session.commit()

            await logger.log_info(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{receiver_username}, ID {recipient_user_id} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç @{giver_username if giver else 'Unknown'}, ID {giver_user_id}: {service_name} –Ω–∞ {service_duration} –¥–Ω–µ–π"
            )

        except Exception as e:
            await logger.log_error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–∞—Ä–∫–∞ {gift_id}', e)
            await callback_query.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–∞—Ä–∫–∞", show_alert=True)


async def run_gift_checker(bot: Bot):
    while True:
        try:
            await gift_checker(bot)
        except Exception as e:
            await logger.log_error("–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ run_checker", e)

        await asyncio.sleep(5)
