services:
  telegram-bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    container_name: telegram-bot
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    command: python main.py
    networks:
      - bot-network

  db:
    image: postgres:16.2
    container_name: telegram-db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5442:5432"
    networks:
      - bot-network

  nginx:
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/app/frontend:ro
    networks:
      - bot-network


  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_app
    restart: always
    env_file:
      - .env
    ports:
      - "12345:12345"
    command: [ "uvicorn", "app:app", "--host", "0.0.0.0", "--port", "12345", "--reload" ]
    networks:
      - bot-network

volumes:
  postgres_data:

networks:
  bot-network:
